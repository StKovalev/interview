Советы для разработчика интерфейсов

Программирование. Вы должны свободно владеть хотя бы одним языком программирования, однако основной язык разработки фронтенда в Яндексе — JavaScript. Знание его основ необходимо, чтобы успешно пройти собеседование. Кандидат также должен уметь применять его хотя бы в одном окружении – на клиенте (в браузере, приложениях, расширениях и т.п.) или на сервере.

При написании кода на собеседовании нужно придерживаться правил: код должен быть без ошибок, читаемым и легко восприниматься.

Алгоритмы и структуры данных. Мы рассчитываем на то, что вы знакомы со стандартными алгоритмами, включая разные методы сортировки и обхода графов. Нужно уметь давать оценку сложности и расходу памяти алгоритма в нотации big O. Вы должны быть знакомы с внутренним устройством стандартных структур данных JavaScript и знать вычислительную сложность основных операций над ними. Кроме того, нужно разбираться с особенностями асинхронного программирования. Дополнительным плюсом будет умение составлять бенчмарки и оценивать реальную производительность программных решений в зависимости от среды исполнения.

Библиотеки и фреймворки. На собеседовании от вас не требуется знания конкретных библиотек или фреймворков, нужно уметь решать задачи без них. При этом умение использовать готовые и популярные решения, обосновывая свой выбор, — необходимый навык в дальнейшей работе.

Фронтенд. У разработчиков интерфейсов широкий круг задач, поэтому необходимы знания в самых разных областях: JavaScript, HTML и CSS, протокол HTTP, механизмы работы браузера, способы и форматы передачи данных между клиентом и сервером, профилирование кода и оптимизации загрузки страниц, понимание механизмов обеспечения безопасности веб-приложений. Для подготовки и систематизации своих знаний можно использовать материалы, ссылки на которые приведены в конце страницы.

Архитектура. Вы должны уметь использовать хорошие практики проектирования в рамках создания или изменения текущих компонентов. Будет большим плюсом понимание таких концепций, как SOLID, KISS, DRY и т.п., а также знание их сильных и слабых сторон. Необходимо понимать, как создавать удобные программные интерфейсы и писать код, который легко использовать заново, изменять и тестировать.

Если у вас достаточно опыта, вам могут предложить спроектировать сложную систему. Потребуется сформулировать требования к системе, оценить необходимые мощности, спроектировать высокоуровневую архитектуру и, возможно, детально описать один из компонентов. Также будут интересны ваши мысли о таких инженерно-проектных аспектах, как планирование и оценка длительности воплощения, метрики, разбиение на стадии и контрольные точки, план тестирования.

Полезные книги и ресурсы

Книги
Серия You Don't Know JS, Kyle Simpson
Speaking JavaScript, Axel Rauschmayer
«Секреты JavaScript ниндзя», Джон Резиг
JavaScript Enlightenment, Cody Lindley
«Чистый код: создание, анализ и рефакторинг», Роберт Мартин
«Секреты CSS», Леа Веру
Introduction to Algorithms, Thomas H. Cormen
Cracking the Coding Interview, Gayle Laakmann McDowell
Онлайн-материалы
http://shamansir.github.io/JavaScript-Garden/
https://academy.yandex.ru/events/frontend/
https://www.youtube.com/channel/UCMtlICYxr6Dz_PG9_SVqRYQ 
Онлайн-задачи
https://www.codewars.com/
https://www.hackerrank.com
